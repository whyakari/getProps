name: Build Prop Pixel Google

on:
  workflow_dispatch:
    inputs:
      device_name:
        description: "Device Name"
        required: true
        default: "cheetah"
        type: choice
        
        options:
          - shiba
          - husky
          - cheetah
          - panther
          - bluejay
          - oriole
          - raven
          - barbet
          - redfin
          - bramble
          - sunfish
          - coral
          - flame
          - bonito
          - sargo
          - crosshatch
          - blueline
          - taimen
          - walleye
          - sailfish
          - ryu
          - angler
          - bullhead
          - hammerhead
          - shamu
          - razor
          - razorg
          - volantisg
          - volantis
          - fugu

jobs:
  onDispatch:
    name: On Dispatch
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Install dos2unix python3 python3-pip
        uses: daaku/gh-action-apt-install@v4
        with:
          packages: dos2unix python3 python3-pip

      - name: Install protobuf
        run: |
          pip install --upgrade pip
          pip3 install -Iv protobuf==3.20.3

      - name: Make executable all script
        run: chmod +x *.sh

      - name: Download last ota ${{ github.event.inputs.device_name }}
        run: ./download_last_ota_build.sh ${{ github.event.inputs.device_name }}

      - name: Extract Image and build prop
        run: ./extract_images.sh

      - name: Read final_name from file
        id: read_name
        run: | 
          echo ::set-output name=final_name::$(cat build.txt)
        working-directory: ${{ github.workspace }}

      - name: Copy prop to result ${{ matrix.device_name }}
        run: |
          mkdir -p result
          cp ./**/**/{system}.prop result/
          mv result/system.prop result/build.prop

      - name: Create Pif PixelGoogle Image 
        run: |
          sh ./gen_custom_pif.sh json result/build.prop

      - name: Upload Pif ${{ matrix.device_name }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.read_name.outputs.final_name }}
          path: result
          if-no-files-found: error
